AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: ' Data pipeline

  This template deploys the Data Pipeline for Frauds datasets

  '

Globals:
  Function:
    Timeout: 5
    Runtime: python3.8
    Tracing: Active

Resources:
  GlueCrawlerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'crawlerRole-${AWS::StackName}'
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
              - "glue.amazonaws.com"
            Action:
            - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
        - "arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole"
  
  GlueDatabase:
    Type: AWS::Glue::Database
    Properties:
      CatalogId: !Ref AWS::AccountId
      DatabaseInput:
        Name: !Sub "crawlerdatabase-${AWS::StackName}"

  GlueCrawler:
    Type: AWS::Glue::Crawler
    Properties:
      Name: !Sub "crawler-${AWS::StackName}"
      Role: !GetAtt GlueCrawlerRole.Arn
      DatabaseName: !Ref GlueDatabase
      Targets:
        S3Targets:
          - Path: !Join [ "/", [!Ref RawDataBucket, "input"]]
  
  RawDataBucket:
    Type: AWS::S3::Bucket
    DependsOn:
    - InvokingLambdaPermission
    Properties:
      BucketName: !Sub 'raw-data-${AWS::StackName}'
      NotificationConfiguration:
        LambdaConfigurations:
        - Event: 's3:ObjectCreated:*'
          Function: !GetAtt CrawlerTriggerFunction.Arn
          Filter:
            S3Key:
              Rules:
              - 
                Name: suffix
                Value: .csv
  
  InvokingLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref CrawlerTriggerFunction
      Principal: s3.amazonaws.com
      SourceArn: !Sub 'arn:aws:s3:::raw-data-${AWS::StackName}'
      SourceAccount: !Ref AWS::AccountId

  ProcessedDataBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'processed-data-${AWS::StackName}'

  CrawlerTriggerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/crawler_trigger
      Handler: app.lambda_handler
      Environment:
        Variables:
          CRAWLER: !Sub "crawler-${AWS::StackName}"
      Policies:
      - Statement:
        - Effect: Allow
          Action:
          - glue:*
          - s3:GetBucketLocation
          - s3:ListBucket
          - s3:ListAllMyBuckets
          - s3:GetBucketAcl
          - ec2:DescribeVpcEndpoints
          - ec2:DescribeRouteTables
          - ec2:CreateNetworkInterface
          - ec2:DeleteNetworkInterface
          - ec2:DescribeNetworkInterfaces
          - ec2:DescribeSecurityGroups
          - ec2:DescribeSubnets
          - ec2:DescribeVpcAttribute
          - iam:ListRolePolicies
          - iam:GetRole
          - iam:GetRolePolicy
          - cloudwatch:PutMetricData
          Resource:
          - "*"
        - Effect: Allow
          Action:
          - s3:CreateBucket
          Resource:
          - arn:aws:s3:::aws-glue-*
        - Effect: Allow
          Action:
          - s3:GetObject
          - s3:PutObject
          - s3:DeleteObject
          Resource:
          - arn:aws:s3:::aws-glue-*/*
          - arn:aws:s3:::*/*aws-glue-*/*
        - Effect: Allow
          Action:
          - s3:GetObject
          Resource:
          - arn:aws:s3:::crawler-public*
          - arn:aws:s3:::aws-glue-*
        - Effect: Allow
          Action:
          - logs:CreateLogGroup
          - logs:CreateLogStream
          - logs:PutLogEvents
          Resource:
          - arn:aws:logs:*:*:/aws-glue/*
        - Effect: Allow
          Action:
          - ec2:CreateTags
          - ec2:DeleteTags
          Condition:
            ForAllValues:StringEquals:
              aws:TagKeys:
              - aws-glue-service-resource
          Resource:
          - arn:aws:ec2:*:*:network-interface/*
          - arn:aws:ec2:*:*:security-group/*
          - arn:aws:ec2:*:*:instance/*
        - Effect: Allow
          Action:
          - s3:*
          - s3-object-lambda:*
          Resource: "*"
        - Effect: Allow
          Action:
          - athena:*
          Resource:
          - "*"
        - Effect: Allow
          Action:
          - glue:CreateDatabase
          - glue:DeleteDatabase
          - glue:GetDatabase
          - glue:GetDatabases
          - glue:UpdateDatabase
          - glue:CreateTable
          - glue:DeleteTable
          - glue:BatchDeleteTable
          - glue:UpdateTable
          - glue:GetTable
          - glue:GetTables
          - glue:BatchCreatePartition
          - glue:CreatePartition
          - glue:DeletePartition
          - glue:BatchDeletePartition
          - glue:UpdatePartition
          - glue:GetPartition
          - glue:GetPartitions
          - glue:BatchGetPartition
          Resource:
          - "*"
        - Effect: Allow
          Action:
          - s3:GetBucketLocation
          - s3:GetObject
          - s3:ListBucket
          - s3:ListBucketMultipartUploads
          - s3:ListMultipartUploadParts
          - s3:AbortMultipartUpload
          - s3:CreateBucket
          - s3:PutObject
          - s3:PutBucketPublicAccessBlock
          Resource:
          - arn:aws:s3:::aws-athena-query-results-*
        - Effect: Allow
          Action:
          - s3:GetObject
          - s3:ListBucket
          Resource:
          - arn:aws:s3:::athena-examples*
        - Effect: Allow
          Action:
          - s3:ListBucket
          - s3:GetBucketLocation
          - s3:ListAllMyBuckets
          Resource:
          - "*"
        - Effect: Allow
          Action:
          - sns:ListTopics
          - sns:GetTopicAttributes
          Resource:
          - "*"
        - Effect: Allow
          Action:
          - cloudwatch:PutMetricAlarm
          - cloudwatch:DescribeAlarms
          - cloudwatch:DeleteAlarms
          Resource:
          - "*"
        - Effect: Allow
          Action:
          - lakeformation:GetDataAccess
          Resource:
          - "*"
Outputs:
  RawDataBucket:
    Value: !Ref RawDataBucket
  ProcessedDataBucket:
    Value: !Ref ProcessedDataBucket
